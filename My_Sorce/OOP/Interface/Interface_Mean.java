package Interface;
									//객체의 사용 방법을 정의한 타입. 객체의 교환성을 높여주기 대문에 다형성을 구현하는 매우 중요한 역할.
									//개발 코드와 객체가 서로 통신하는 접점 역할을 함. 개발 코드가 인터페이스의 메소드를 호출하면 인터페이스는 객체의 메소드를 호출.
									//인터페이스를 거쳐 메소드를 호출하는 이유는 개발 코드를 수정하지 않고 사용하는 객체를 변경할 수 있도록 하기 위함.
public interface Interface_Mean {	//첫 문자를 대문자, 나머지는 소문자로 쓰는 것이 관례.
								
									//클래스는 필드, 생성자, 메소드를 구성 멤버로 가지는 반면,
									//인터페이스는 상수와 메소드만 구성 멤버로 가짐. 객체로 생성할 수 없어, 생성자는 가질 수 없음.
	
									////default , static , 추상 선언이 가능.
	
	default void test(){}			//객체가 가지고 있는 인스턴스 메소드라고 생각해야 함. 
	static int test1(int x){return x;}	//객체가 없어도 인터페이스만으로 호출이 가능.
	int X = 5;  					//상수. 변수는 선언이 불가능. 기본적으로 public static fainal 로 자동적으로 바뀜. 대문자를 사용하는 것이 관례.
	abstract void test1();			//추상 메소드 , 실제 실행부는 객체가 가지고 있음.
	void test2();					//추상 생략 가능; 컴파일과정에서 자동으로 붙게됨.
	
	

}

